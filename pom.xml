<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.broadcom.spring-consulting</groupId>
	<artifactId>time-service</artifactId>
	<version>3.2.5</version>
	<name>time-service</name>
	<description>Demo project for Spring Boot</description>

	<url/>
	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>dmfrey</id>
			<name>Daniel Frey</name>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:https://github.com/dmfrey/time-service.git</connection>
		<developerConnection>scm:git:https://github.com/dmfrey/time-service.git</developerConnection>
		<tag/>
		<url>https://github.com/dmfrey/time-service</url>
	</scm>

	<distributionManagement>

		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/dmfrey/time-service</url>
		</repository>

	</distributionManagement>

	<properties>
		<java.version>21</java.version>
		<spring-modulith.version>1.4.0</spring-modulith.version>
		<jmolecules.version>2023.3.1</jmolecules.version>
	</properties>

	<dependencies>

		<!-- Spring Boot dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring Modulith -dependencies -->
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-jdbc</artifactId>
		</dependency>

		<!-- JMolecules dependencies -->
		<dependency>
			<groupId>org.jmolecules</groupId>
			<artifactId>jmolecules-ddd</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jmolecules</groupId>
			<artifactId>jmolecules-hexagonal-architecture</artifactId>
		</dependency>

		<!-- Observability dependencies -->
		<!-- Prometheus dependencies -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Dynatrace dependencies -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-dynatrace</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Wavefront dependencies -->
		<dependency>
			<groupId>com.wavefront</groupId>
			<artifactId>wavefront-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-wavefront</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Tracing dependencies -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-otlp</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>net.ttddyy.observation</groupId>
			<artifactId>datasource-micrometer-spring-boot</artifactId>
			<version>1.0.3</version>
		</dependency>

		<!-- Database dependencies -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Developer Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmolecules.integrations</groupId>
			<artifactId>jmolecules-archunit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>org.springframework.modulith</groupId>
				<artifactId>spring-modulith-bom</artifactId>
				<version>${spring-modulith.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.jmolecules</groupId>
				<artifactId>jmolecules-bom</artifactId>
				<version>${jmolecules.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>wavefront-spring-boot-bom</artifactId>
				<version>3.2.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<build>

		<plugins>

			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.broadcom.springconsulting.timeservice.Application</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<configuration>
					<verbose>true</verbose>
				</configuration>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>org.cyclonedx</groupId>-->
<!--				<artifactId>cyclonedx-maven-plugin</artifactId>-->
<!--				<version>2.9.1</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<phase>validate</phase>-->
<!--						<goals>-->
<!--							<goal>makeAggregateBom</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					<outputFormat>json</outputFormat>-->
<!--					<outputName>classes/bom</outputName>-->
<!--				</configuration>-->
<!--			</plugin>-->

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>github</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<configuration>
							<mainClass>com.broadcom.springconsulting.timeservice.Application</mainClass>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<image>
								<name>ghcr.io/dmfrey/${project.artifactId}:${project.version}</name>
								<publish>true</publish>
							</image>
							<docker>
								<publishRegistry>
									<username>${env.GITHUB_USER}</username>
									<password>${env.GITHUB_TOKEN}</password>
									<url>https://ghcr.io</url>
								</publishRegistry>
							</docker>
						</configuration>
					</plugin>

				</plugins>

			</build>

		</profile>

	</profiles>

</project>
